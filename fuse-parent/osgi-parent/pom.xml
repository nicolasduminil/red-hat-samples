<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>fr.simplex-software.red-hat.fuse</groupId>
    <artifactId>fuse-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <groupId>fr.simplex-software.red-hat.fuse.osgi</groupId>
  <artifactId>osgi-parent</artifactId>
  <packaging>pom</packaging>
  <name>Red Hat samples :: The Fuse OSGi master POM module</name>
  <dependencies>
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api-osgi</artifactId>
      <version>2.2.7</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jaxb</groupId>
      <artifactId>jaxb-runtime</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-atinject_1.0_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>osgi.core</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.framework</artifactId>
      <version>1.9.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>osgi.cmpn</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.scr</artifactId>
      <scope>provided</scope>
    </dependency>
  </dependencies>
  <modules>
    <module>customers</module>
  </modules>
  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.karaf.tooling</groupId>
        <artifactId>karaf-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.karaf.tooling</groupId>
        <artifactId>karaf-services-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>service-metadata-generate</id>
            <phase>process-classes</phase>
            <goals>
              <goal>service-metadata-generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.dkanejs.maven.plugins</groupId>
        <artifactId>docker-compose-maven-plugin</artifactId>
        <inherited>false</inherited>
        <executions>
          <execution>
            <id>up</id>
            <phase>install</phase>
            <goals>
              <goal>up</goal>
            </goals>
            <configuration>
              <composeFile>${project.basedir}/src/main/resources/docker-compose.yml</composeFile>
              <detachedMode>true</detachedMode>
            </configuration>
          </execution>
          <execution>
            <id>down</id>
            <phase>clean</phase>
            <goals>
              <goal>down</goal>
            </goals>
            <configuration>
              <composeFile>${project.basedir}/src/main/resources/docker-compose.yml</composeFile>
              <removeVolumes>true</removeVolumes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${project.basedir}/src/main/docker</directory>
              <includes>
                <include>**/${project.artifactId}.jar</include>
                <include>**/*.script</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>verify</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/src/main/docker</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>target</directory>
                  <includes>
                    <include>${project.artifactId}.jar</include>
                  </includes>
                </resource>
                <resource>
                  <directory>.</directory>
                  <includes>
                    <include>*.script</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>